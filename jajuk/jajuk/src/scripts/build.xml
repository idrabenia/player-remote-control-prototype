<?xml version='1.0' encoding='UTF-8'?>
<!--Ant script for users (target package_jar) and packagers (other targets)-->
<!--void 20080323 -->

<project default='package_jar' name='jajuk' basedir='../..'>
	<!--VARIABLES-->

	<tstamp>
		<format property='TODAY' pattern='yyyyMMdd' locale='en,UK' />
	</tstamp>

	<!-- JNLP date -->
	<tstamp>
		<format property='JNLP_DATE' pattern='yyyyMMdd_hhmm' locale='en,UK' />
	</tstamp>

	<!--Build type : 'unstable', 'final', 'pre-release' or 'maintenance' -->
	<property name='type' value='final' />

	<!--Distribution release  
	!!! DO NOT USE '-' CHARACTER IN VERSION !!!-->
	<property name='version' value='1.10.3' />

	<!--JNLP version-->
	<!-- In final releases (including RC), jnlp_version=${version} 
	In maintenance or unstable daily builds, jnlp_version=${JNLP_DATE} : we don't use regular version 
	so the version changes each day -->
	<!--<property name='jnlp_version' value='${JNLP_DATE}' />-->
	<property name='jnlp_version' value='${version}' />

	<!--Test flag: values: 'test' or 'notest' 
	'test' for 'unstable' branches, 'notest' for master, pre-release and maintenance branches
	-->
	<property name='test' value='notest' />

	<!-- ======================= -->
	<!-- | Configuration paths | -->
	<!-- ======================= -->
	<property name='conf_izpackdir' value='/data/build_tools/IzPack' />
	<property name='conf_jnlp-dist' value='/tmp/jajuk-dist/jnlp-dist' />
	<property name='conf_homeuser' value='/home/tomcat55' />
	<property name='conf_uploaddir' value='/tmp/jajuk-dist/packages/' />
	<property name='conf_jarbundler' value='/data/build_tools/jarbundler' />
	<property name='conf_jarbundler-jar' value='jarbundler-1.9.jar' />
	<property name="launch4j.dir" location="/data/build_tools/launch4j" />

	<!-- ============================== -->
	<!-- | End of configuration paths | -->
	<!-- ============================== -->

	<!--CONST-->
	<property name='jajuk.java.build.version6' value='1.6' />
	<property name='jajuk.java.build.version7' value='1.7' />
	<property name='rootdir' value='/tmp/jajuk-dist' />
	<property name='installdir' value='/usr/share/jajuk/' />
	<property name='jnidir' value='/usr/lib/jajuk/' />
	<property name='distdir' value='${rootdir}/jajuk' />
	<property name='rpmbuilddir' value='${rootdir}/RPMBUILD' />
	<property name='rpmdistdir' value='${rpmbuilddir}/jajuk' />
	<property name='windowsdir' value='${rootdir}/windows' />
	<property name='izpackdir' value='${rootdir}/java' />
	<property name='sourcesdir' value='${rootdir}/sources' />
	<property name='libdir' value='lib' />
	<property name='distfiles' value='dist-files' />
	<property name='nativedir' value='native' />
	<property name='javadir' value='src/main/java' />
	<property name='classdir' value='classes' />
	<property name='javadocdir' value='dist-files/doc/javadoc' />
	<property name='jarname' value='jajuk.jar' />
	<property name='distjarname' value='jajuk-java-installer-' />
	<property name='sourcesdist' value='${sourcesdir}/jajuk-sources-${version}.zip' />
	<property name='mplayerdir' value='/tmp/mplayer' />

	<!-- This used to be the intermediate directory used to build war file, we used a persisitent 
 	directory to use jar files in next war (each war contains current and previous jars for 
 	incremental upgrade). We don't use incremental udated anymore as it does require too much 
 	disk space -->
	<property name='jnlpdir' value='${conf_jnlp-dist}/${version}' />
	<property name='srcdir' value='${basedir}/src' />

	<!-- Izpack binary path -->
	<path id="izpack.classpath">
		<fileset dir="${conf_izpackdir}">
			<include name="lib/*.jar" />
		</fileset>
	</path>

	<target name='get-jvm'>
		<echo message='Verifying Java Version used for building, found version ${java.specification.version}, expecting ${jajuk.java.build.version6} or ${jajuk.java.build.version7}' />
		<condition property='jvm.not.ok'>
			<not>
				<or>
					<equals arg1='${java.specification.version}' arg2='${jajuk.java.build.version6}' />
					<equals arg1='${java.specification.version}' arg2='${jajuk.java.build.version7}' />
				</or>
			</not>
		</condition>
	</target>

	<target name='check-jvm' depends='get-jvm' if='jvm.not.ok'>
		<fail message='Wrong Java version used for building: ${java.specification.version}, the build requires version ${jajuk.java.build.version6} or ${jajuk.java.build.version7}' />
	</target>

	<target name='startup' depends='check-jvm'>
		<echo message='Building Jajuk release: ${version} using Java ${java.specification.version}' />
		<echo message='Building Jajuk release: ${version}' />
		<echo message='Basedir: ${basedir}' />
		<!--Prepare timestamp-->
		<tstamp>
			<format property='JAJUK_TIMESTAMP' pattern='yyyy-MM-dd HH:mm:ss' />
		</tstamp>
	</target>

	<target name='clean' description='o Clean up previous build files'>
		<delete failonerror='true' dir='${rootdir}' />
		<delete failonerror='true' dir='${jnlpdir}' />
		<delete failonerror='true' dir='${mplayerdir}' />
	</target>


	<target name='mkdist_jar'>
		<echo message='Prepare files to build jar package' />
		<mkdir dir='${rootdir}' />
		<mkdir dir='${distdir}' />
		<copy todir='${distdir}/lib'>
			<fileset dir='${libdir}' />
			<fileset file='${basedir}/src/legals/*.*' />
		</copy>
		<mkdir dir='${distdir}/bin' />
		<mkdir dir='${distdir}/${classdir}' />
		<copy todir='${distdir}/src'>
			<fileset dir='${javadir}' />
		</copy>
		<!--copy README and legals file in / for package distribution-->
		<copy todir='${distdir}'>
			<fileset file='${basedir}/src/legals/LICENSE-GPL.txt' />
			<fileset file='${basedir}/src/legals/DERIVATED.txt' />
			<fileset file='${basedir}/src/doc/README.html' />
			<fileset file='${basedir}/src/legals/AUTHORS.txt' />
		</copy>
		<!--copy both README and LICENCE files as must also be in src/ for source distribution-->
		<copy todir='${distdir}/src'>
			<fileset file='${basedir}/src/legals/LICENSE-GPL.txt' />
			<fileset file='${basedir}/src/legals/DERIVATED.txt' />
			<fileset file='${basedir}/src/doc/README.html' />
			<fileset file='${basedir}/src/legals/AUTHORS.txt' />
		</copy>

		<!--copy native dll to bin directory-->
		<copy todir='${distdir}/bin'>
			<fileset file='${basedir}/lib/*.dll' />
		</copy>
		<copy todir='${distdir}/src'>
			<fileset file='${srcdir}/packaging/MANIFEST.MF' />
		</copy>
		<copy todir='${distdir}'>
			<fileset file='${srcdir}/scripts/build.xml' />
		</copy>
		<mkdir dir='${distdir}/dist-files' />
		<copy todir='${distdir}/dist-files/icons'>
			<fileset file='${srcdir}/main/resources/icons/**' />
		</copy>
		<copy todir='${distdir}/dist-files/images'>
			<fileset file='${srcdir}/main/resources/images/**' />
		</copy>
		<copy todir='${distdir}/dist-files/perspectives'>
			<fileset file='${srcdir}/main/resources/perspectives/**' />
		</copy>
		<copy todir='${distdir}/dist-files/xslt'>
			<fileset file='${srcdir}/main/resources/xslt/**' />
		</copy>
		<copy todir='${distdir}'>
			<fileset file='${srcdir}/main/resources/icons/64x64/jajuk-icon-shortcut_64x64.png' />
			<fileset file='${srcdir}/main/resources/icons/16x16/jajuk-uninstall.png' />
		</copy>
		<copy todir='${distdir}'>
			<fileset file='${srcdir}/scripts/jajuk' />
			<fileset file='${srcdir}/scripts/jajuk.bat' />
		</copy>
		<chmod file='${distdir}/jajuk' perm='ugo+rx' />

		<!-- Set build date -->
		<tstamp>
			<format property='build.time' pattern='yyyy/MM/dd HH:mm' />
		</tstamp>
		<echo message='Build time: ${build.time}' />
		<replace dir='${distdir}/src/org/jajuk/util' value='${build.time}' encoding='UTF-8'>
			<include name='Const.java' />
			<replacetoken>DATE_REPLACED_BY_ANT</replacetoken>
		</replace>
		<!-- Set release in code-->
		<replace dir='${distdir}/src/org/jajuk/util' value='${version}' encoding='UTF-8'>
			<include name='Const.java' />
			<replacetoken>VERSION_REPLACED_BY_ANT</replacetoken>
		</replace>
		<!-- Set release in user build.xml file-->
		<replace dir='${distdir}' value='${version}'>
			<include name='build.xml' />
			<include name='jajuk' />
			<replacetoken>VERSION_REPLACED_BY_ANT</replacetoken>
		</replace>
		<!-- Set debug value in scripts-->
		<replace dir='${distdir}' value='-${test}'>
			<include name='jajuk' />
			<include name='jajuk.bat' />
			<replacetoken>TEST_FLAG_REPLACED_BY_ANT</replacetoken>
		</replace>
	</target>

	<target name='download_mplayer'>
		<!-- We include the mplayer staticaly linked binary under OSX and Windows -->
		<echo message='Download mplayer for inclusion inside packages' />
		<!-- OSX mplayer -->
		<mkdir dir='${mplayerdir}/osx' />
		<get src='http://repository.jajuk.info/mplayer/osx/1.0rc2/mplayer' dest='${mplayerdir}/osx/mplayer' />
		<!-- Windows mplayer -->
		<mkdir dir='${mplayerdir}/windows' />
		<get src='http://repository.jajuk.info/mplayer/20090114/mplayer.exe' dest='${mplayerdir}/windows/mplayer.exe' />
	</target>

	<target name='compile'>
		<echo message='Compile the code' />
		<javac destdir='${distdir}/${classdir}' source='1.6' target='1.6' deprecation='true' debug='true' optimize='true' excludes='**/package.html' encoding='UTF-8'>
			<compilerarg value='-Xlint:all' />
			<src>
				<pathelement path='${distdir}/src'>
				</pathelement>
			</src>
			<classpath>
				<fileset dir='${distdir}/lib'>
					<include name='*.jar' />
				</fileset>
			</classpath>
		</javac>
		<mkdir dir='${distdir}/${classdir}/icons' />
		<mkdir dir='${distdir}/${classdir}/images' />
		<mkdir dir='${distdir}/${classdir}/perspectives' />
		<mkdir dir='${distdir}/${classdir}/xslt' />
		<!-- Copy files to be embeded into the jar -->
		<copy todir='${distdir}/${classdir}/icons'>
			<fileset dir='${srcdir}/main/resources/icons' />
		</copy>
		<copy todir='${distdir}/${classdir}/images/included'>
			<fileset file='${srcdir}/main/resources/images/included/*' />
		</copy>
		<copy todir='${distdir}/${classdir}/org/jajuk/i18n'>
			<fileset file='${javadir}/org/jajuk/i18n/*.properties' />
		</copy>
		<copy todir='${distdir}/${classdir}/org/jajuk/util/log'>
			<fileset file='${javadir}/org/jajuk/util/log/*.xml' />
			<fileset file='${javadir}/org/jajuk/util/log/*.properties' />
		</copy>
		<copy todir='${distdir}/${classdir}/perspectives'>
			<fileset file='${srcdir}/main/resources/perspectives/*.xml' />
		</copy>
		<copy todir='${distdir}/${classdir}/xslt'>
			<fileset file='${srcdir}/main/resources/xslt/**' />
		</copy>
	</target>

	<target name='package_jar' description='o Create Jajuk jar file' depends='startup,clean,mkdist_jar,compile'>
		<echo message='Create Jajuk jar file' />
		<jar jarfile='${distdir}/bin/${jarname}' excludes='**/package.html' manifest='${srcdir}/packaging/MANIFEST.MF' compress='true'>
			<fileset dir='${distdir}/${classdir}' />
		</jar>
		<delete dir='${distdir}/${classdir}' />
		<echo message='jajuk.jar had been successfully built in: ${distdir}/bin/${jarname}' />
	</target>


	<target name='package_all' description='o Create all packages' depends='package_exe,package_izpack,package_rpm,package_source,package_sfx,package_jnlp,package_macos'>
		<echo message='Successfully built packages:' />
		<echo message=' Jajuk Jar file in:     ${distdir}/bin/${jarname}' />
		<echo message=' RPM package in:        ${rpmbuilddir}/RPMS/noarch/jajuk-${version}-1.noarch.rpm' />
		<echo message=' Windows executable in: ${windowsdir}/jajuk-${version}-setup.exe' />
		<echo message=' Java installer in:     ${izpackdir}/jajuk-java-installer-${version}.jar' />
		<echo message=' MAC OS X in:           ${distdir}/jajuk-macos-${version}.zip' />
		<echo message=' Source archive in:     ${sourcesdist}' />
		<echo message=' JNLP war file in:      ${rootdir}/jajuk-${type}.war' />
		<echo message=' Jajuk binary file in:  ${distdir}/bin/${jarname}' />
	</target>


	<!--IzPack package creation -->

	<target name='package_izpack' description='o Create Jajuk IzPack package' depends='download_mplayer,startup,clean,package_jar,mkdist_izpack'>
		<taskdef name='izpack' classpathref="izpack.classpath" classname='com.izforge.izpack.ant.IzPackTask' />
		<echo message='Create Jajuk IzPack package' />
		<echo message='Makes the installer using IzPack' />
		<izpack input='${izpackdir}/jajuk.izpack' output='${izpackdir}/${distjarname}${version}.jar' basedir='${srcdir}' izPackDir='${conf_izpackdir}' />
	</target>


	<target name='package_rpm' description='o Create Jajuk RPM package' depends='startup,clean,mkdist_rpm,package_jar'>
		<echo message='Create Jajuk RPM package' />
		<!-- Copy jajuk.jar in the RPM distdir -->
		<copy todir='${rpmdistdir}${installdir}/bin'>
			<fileset file='${distdir}/bin/${jarname}' />
		</copy>

		<!-- rights-->
		<chmod file='${rpmdistdir}/usr/bin/jajuk' perm='ugo+rx' />
		<chmod file='${rpmdistdir}/usr/share/applications/jajuk.desktop' perm='ugo+rwx' />

		<!--RPM, see http://forgeftp.novell.com//library/SUSE%20Package%20Conventions/spc_desktop_menu.html-->
		<copy todir='${conf_homeuser}' overwrite='yes'>
			<fileset file='${srcdir}/packaging/RPMS/.rpmmacros' />
		</copy>
		<rpm failOnError='true' specFile='jajuk.spec' topDir='${rpmbuilddir}' cleanBuildDir='yes' removeSpec='no' command='-bb -vv --target noarch' />
	</target>


	<!--jarbundler Mac OS zip package creation -->
	<target name='package_macos' description='o Create Jajuk MAC OS package' depends='startup,clean,mkdist_macos,package_jar,jarbundler'>
		<echo message='Create Jajuk MAC OS package' />
		<!-- Create the distribution directory -->
		<mkdir dir='${distdir}/macos' />
		<!-- Copy mplayer OSX binary into it -->
		<mkdir dir='${distdir}/jarbundler/Jajuk.app/Contents/Resources/External_Binaries' />
		<copy file='${mplayerdir}/osx/mplayer' todir='${distdir}/jarbundler/Jajuk.app/Contents/Resources/External_Binaries' />
		<zip zipfile='${distdir}/jajuk-macos-${version}.zip'>
			<zipfileset dir='${distdir}/jarbundler/Jajuk.app/Contents' filemode='755' prefix='Jajuk.app/Contents'>
				<include name='MacOS/JavaApplicationStub' />
				<include name='PkgInfo' />
				<include name='Info.plist' />
				<include name='Resources/**' />
			</zipfileset>
			<fileset file='${basedir}/src/doc/README.html' />
			<fileset file='${basedir}/src/legals/LICENSE.txt' />
			<fileset file='${basedir}/src/legals/AUTHORS.txt' />
		</zip>
	</target>

	<target name='package_source' description='o Create Jajuk source package (zip)' depends='startup,clean,mkdist_source'>
		<echo message='Create Jajuk source package' />
		<zip basedir='${sourcesdir}' destfile='${sourcesdist}' />
	</target>

	<!-- Windows EXE creation using launch4j-->
	<target name='package_exe' description='o Create Jajuk Windows executable file' depends='package_jar,mkdist_windows'>
		<taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${launch4j.dir}/launch4j.jar
	        :${launch4j.dir}/lib/xstream.jar" />
		<echo message='Create Jajuk Windows executable file' />
		<launch4j configFile="${windowsdir}/jajuk.launch4j" />
	</target>

	<!-- Windows installer EXE creation from IzPack jar-->
	<target name='package_sfx' description='o Create IzPack Windows executable file' depends='package_exe,package_izpack'>
		<taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${launch4j.dir}/launch4j.jar
			        :${launch4j.dir}/lib/xstream.jar" />
		<echo message='Create Jajuk Windows executable file' />
		<launch4j configFile="${windowsdir}/installer.launch4j" />
	</target>

	<target name='package_jnlp' description='o Create Java Web Start war distribution' depends='startup,clean,package_jar'>
		<echo message='Create Java Web Start war distribution' />
		<!--Note that all jars (including jajuk-native.jar must be signed with the same certificate), we do this manually -->
		<mkdir dir='${jnlpdir}' />
		<mkdir dir='${jnlpdir}/app' />
		<mkdir dir='${jnlpdir}/app/windows' />
		<!--Copy current jars -->
		<copy todir='${jnlpdir}/app'>
			<fileset file='${distdir}/lib/*.jar' />
		</copy>
		<copy todir='${jnlpdir}/app'>
			<fileset file='${distdir}/bin/*.jar' />
		</copy>
		<copy todir='${jnlpdir}/app'>
			<fileset file='${srcdir}/packaging/jnlp/*.jnlp' />
		</copy>
		<copy todir='${jnlpdir}/app'>
			<fileset file='${srcdir}/packaging/jnlp/*.gif' />
		</copy>
		<copy todir='${jnlpdir}/app'>
			<fileset file='${srcdir}/main/resources/images/included/jajuk-splashscreen.jpg' />
		</copy>
		<!--Copy native jars -->
		<copy todir='${jnlpdir}/app/windows'>
			<fileset file='${srcdir}/packaging/jnlp/windows/*.jar' />
		</copy>
		<!-- Rename all jars to add JNLP-way release: <name>__V<release>.jar -->
		<move todir='${jnlpdir}'>
			<fileset dir='${jnlpdir}'>
				<include name='**/*.jar' />
			</fileset>
			<mapper type='glob' from='*.jar' to='*__V${jnlp_version}.jar' />
		</move>

		<!-- Set test or no test in jnlp file-->
		<replace dir='${jnlpdir}/app' value='-${test}'>
			<include name='*.jnlp' />
			<replacetoken>TEST_FLAG_REPLACED_BY_ANT</replacetoken>
		</replace>

		<!-- Set JNLP_VERSION -->
		<replace dir='${jnlpdir}/app' value='${jnlp_version}'>
			<include name='*.jnlp' />
			<replacetoken>JNLP_VERSION_REPLACED_BY_ANT</replacetoken>
		</replace>

		<!-- Sign all jars -->
		<signjar alias='jajukteam' storepass='passpass'>
			<fileset dir='${jnlpdir}'>
				<include name='**/*.jar' />
			</fileset>
		</signjar>


		<!-- Create the war file -->
		<war destfile='${rootdir}/jajuk-${type}.war' webxml='${srcdir}/packaging/jnlp/web.xml'>
			<fileset dir='${jnlpdir}' />
			<lib file='${srcdir}/packaging/jnlp/jnlp-servlet.jar' />
		</war>
	</target>


	<target name='mkdist_izpack'>
		<echo message='Prepare files to build IzPack package' />
		<mkdir dir='${izpackdir}' />
		<!--Izpack specific -->
		<copy todir='${izpackdir}'>
			<fileset file='${srcdir}/packaging/IzPack/jajuk.izpack' />
			<fileset file='${srcdir}/packaging/IzPack/shortcutSpec.xml' />
			<fileset file='${srcdir}/packaging/IzPack/installDirectory.unix.txt' />
		</copy>
		<!-- Set release in IzPack descriptor file -->
		<replace dir='${izpackdir}' value='${version}'>
			<include name='jajuk.izpack' />
			<replacetoken>VERSION_REPLACED_BY_ANT</replacetoken>
		</replace>
		<replace dir='${izpackdir}' value='-${test}'>
			<include name='shortcutSpec.xml' />
			<replacetoken>TEST_FLAG_REPLACED_BY_ANT</replacetoken>
		</replace>
	</target>


	<target name='mkdist_rpm'>
		<echo message='Prepare files to build RPM package' />
		<!--RPM specific-->
		<!-- Create structure-->
		<mkdir dir='${rootdir}' />
		<mkdir dir='${rpmbuilddir}' />
		<mkdir dir='${rpmbuilddir}/tmp' />
		<mkdir dir='${rpmbuilddir}/SRMPS' />
		<mkdir dir='${rpmbuilddir}/RPMS' />
		<mkdir dir='${rpmbuilddir}/SPECS' />
		<mkdir dir='${rpmbuilddir}/BUILD' />
		<mkdir dir='${rpmdistdir}' />
		<mkdir dir='${rpmdistdir}/usr/bin' />
		<mkdir dir='${rpmdistdir}${installdir}/bin' />
		<mkdir dir='${rpmdistdir}${installdir}/lib' />
		<mkdir dir='${rpmdistdir}${installdir}/lib64' />
		<mkdir dir='${rpmdistdir}${jnidir}' />
		<mkdir dir='${rpmdistdir}${installdir}/native' />
		<mkdir dir='${rpmdistdir}/usr/share/applications' />
		<mkdir dir='${rpmdistdir}/usr/share/doc/packages/jajuk' />
		<mkdir dir='${rpmdistdir}/usr/share/pixmaps' />

		<!-- Copy files -->
		<!--RPM-->
		<copy todir='${rpmbuilddir}/SPECS'>
			<fileset file='${srcdir}/packaging/RPMS/jajuk.spec' />
		</copy>
		<copy todir='${rpmdistdir}/usr/bin'>
			<fileset file='${srcdir}/scripts/jajuk' />
		</copy>
		<!--DO SOMETHING BETTER HERE -->
		<copy todir='${rpmdistdir}${installdir}/lib'>
			<fileset file='${basedir}/lib/*.jar'>
			</fileset>
		</copy>
		<copy todir='${rpmdistdir}${installdir}/lib'>
			<fileset file='${basedir}/lib/lib32/*.so' />
		</copy>
		<copy todir='${rpmdistdir}${installdir}/lib64'>
			<fileset file='${basedir}/lib/lib64/*.so' />
		</copy>
		<copy todir='${rpmdistdir}${installdir}/lib'>
			<fileset file='${basedir}/src/legals/*.*' />
		</copy>
		<!--/DO SOMETHING BETTER HERE -->
		<copy todir='${rpmdistdir}/usr/share/applications'>
			<fileset file='${srcdir}/packaging/RPMS/jajuk.desktop' />
		</copy>
		<copy todir='${rpmdistdir}/usr/share/doc/jajuk'>
			<fileset file='${basedir}/src/doc/README.html' />
			<fileset file='${basedir}/src/legals/*.*' />
		</copy>
		<copy todir='${rpmdistdir}/usr/share/pixmaps'>
			<fileset file='${srcdir}/main/resources/icons/16x16/jajuk-icon_16x16.png' />
			<fileset file='${srcdir}/main/resources/icons/64x64/jajuk-icon_64x64.png' />
			<fileset file='${srcdir}/main/resources/icons/64x64/jajuk-icon-shortcut_64x64.png' />
		</copy>
		<!-- Set release in RPM descriptor file-->
		<replace dir='${rpmbuilddir}/SPECS' value='${version}'>
			<include name='jajuk.spec' />
			<replacetoken>VERSION_REPLACED_BY_ANT</replacetoken>
		</replace>
		<replace dir='${rpmdistdir}/usr/bin' value='-${test}'>
			<include name='jajuk' />
			<replacetoken>TEST_FLAG_REPLACED_BY_ANT</replacetoken>
		</replace>
		<replace dir='${rpmdistdir}/usr/bin' value='${version}'>
			<include name='jajuk' />
			<replacetoken>VERSION_REPLACED_BY_ANT</replacetoken>
		</replace>
	</target>


	<target name='mkdist_macos'>
		<echo message='Prepare files to build MAC OS X package' />
	</target>


	<target name='mkdist_windows'>
		<echo message='Prepare files to build Windows executable' />
		<mkdir dir='${windowsdir}' />
		<!--Windows specific -->
		<copy todir='${windowsdir}'>
			<fileset file='${srcdir}/packaging/native_launcher/*' />
		</copy>
		<!-- Set release in native launcher descriptor files-->
		<replace dir='${windowsdir}' value='${version}'>
			<include name='installer.launch4j' />
			<replacetoken>VERSION_REPLACED_BY_ANT</replacetoken>
		</replace>
		<!-- Set test value in launch4j descriptor files-->
		<replace dir='${windowsdir}' value='-${test}'>
			<include name='jajuk.launch4j' />
			<replacetoken>TEST_FLAG_REPLACED_BY_ANT</replacetoken>
		</replace>
	</target>


	<target name='mkdist_source'>
		<echo message='Prepare files to build source package' />
		<mkdir dir='${sourcesdir}/jajuk-src-${version}' />
		<copy todir='${sourcesdir}/jajuk-src-${version}'>
			<!--Exclude files created during the maven execution -->
			<fileset file='${basedir}/**' excludes='test*,**/target/**' />
		</copy>
	</target>

	<target name='javadoc'>
		<delete dir='${javadocdir}' />
		<mkdir dir='${javadocdir}' />
		<property name='copyright' value='Copyright &amp;copy;  Jajuk team. All Rights Reserved.' />
		<javadoc destdir='${javadocdir}' access='private' use='true' notree='false' nonavbar='false' noindex='false' splitindex='true' author='true' version='true' nodeprecatedlist='false' nodeprecated='false' packagenames='org.jajuk.base,org.jajuk.ui.views,org.jajuk,org.jajuk.i18n,org.jajuk.ui.perspectives,org.jajuk.util.log,org.jajuk.ui,org.jajuk.util,org.jajuk.util.error,org.jajuk.players' sourcepath='src' source='1.6' Windowtitle='Jajuk ${version} API'>
			<classpath>
				<fileset dir='${libdir}'>
					<include name='*.jar'>
					</include>
				</fileset>
				<pathelement location='target/${final.name}.jar' />
			</classpath>
		</javadoc>
	</target>


	<!--jarbundler Mac OS X package creation -->
	<target name='jarbundler' depends='package_jar'>
		<taskdef name='jarbundler' classpath='${conf_jarbundler}/${conf_jarbundler-jar}' classname='net.sourceforge.jarbundler.JarBundler' />
		<echo message='jarbundler' />
		<mkdir dir='${distdir}/jarbundler/' />
		<jarbundler dir='${distdir}/jarbundler/' name='Jajuk' mainclass='org.jajuk.Main' icon='${distdir}/dist-files/images/jajuk-icon_source.icns' jvmversion='1.6+' version='${version}' infostring='Jajuk' stubfile='${basedir}/src/packaging/OSX/JavaApplicationStub' build='${version}' vmoptions='-client -Xms20M -Xmx2G -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -Xverify:none' arguments='-${test}' verbose='true'>
			<jarfileset dir='${distdir}/lib'>
				<include name='**/*.jar' />
			</jarfileset>
			<jarfileset dir='${distdir}/bin'>
				<include name='**/*.jar' />
			</jarfileset>
		</jarbundler>
	</target>

	<!-- Create hash files and upload packages-->
	<target name='deploy_new_release' description='o Put all generated packages and checksums into Jajuk webserver repository directory' depends='package_all'>
		<mkdir dir='${conf_uploaddir}' />
		<copy todir='${conf_uploaddir}'>
			<fileset file='${sourcesdist}' />
			<fileset file='${rpmbuilddir}/RPMS/noarch/*' />
			<fileset file='${windowsdir}/jajuk-${version}-setup.exe' />
			<fileset file='${izpackdir}/jajuk-java-installer-${version}.jar' />
			<fileset file='${distdir}/jajuk-macos-${version}.zip' />
		</copy>
	</target>
</project>
